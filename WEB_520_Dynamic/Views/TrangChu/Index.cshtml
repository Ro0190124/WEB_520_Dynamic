@model IEnumerable<BIEN_LAI_CHI_TIET>
<div class="container">
    <div class="CT_TT">
        @{
            int Nhap = 0;
            int Xuat = 0;
            int tong = 0;
            if(Model != null)
            {
                //Xuat = Model.Count(i => i.BIEN_LAI.LoaiBienLai == true); // Đếm số lượng phần tử có LoaiBienLai là 1
                //Nhap = Model.Count(i => i.BIEN_LAI.LoaiBienLai == false); // Đếm số lượng phần tử có LoaiBienLai là
                //Console.WriteLine(Xuat + " aaaaa" + Nhap);
                //tong = Model.Sum(i => i.SoLuong);
                Console.WriteLine(tong);
            }

        }
        <div class="CT_sp">
            <div class="CT_Icon">
                <i class="fas fa-chart-pie"></i>
            </div>
            <div class="CT_Chu_So">
                <div class="CT_Chu">
                    <p>Tổng sản phẩm</p>
                </div>
                <div class="CT_So">
                    <p>@tong</p>
                </div>
            </div>

        </div>
        <div class="CT_sp">
            <div class="CT_Icon">
                <i class="fas fa-file"></i>
            </div>
            <div class="CT_Chu_So">
                <div class="CT_Chu">
                    <p>Tổng đơn nhập</p>
                </div>
                <div class="CT_So">
                    @if (Nhap == 0)
                    {
                        <p>0</p>
                    }
                    else
                    {
                        <p>@Nhap</p>
                    }
                </div>
            </div>
        </div>
        <div class="CT_sp">
            <div class="CT_Icon">
                <i class="fas fa-file"></i>
            </div>
            <div class="CT_Chu_So">
                <div class="CT_Chu">
                    <p>Tổng đơn xuất</p>
                </div>
                <div class="CT_So">
                    @if(Xuat == 0)
                    {
                        <p>0</p>
                    }
                    else
                    {
                        <p>@Xuat</p>
                    }
                </div>
            </div>
        </div>
    </div>
    <div>
        <select id="yearDropdown">
        </select>
    </div>

    <div>
        <canvas id="lineChart" width="800" height="400"></canvas>
    </div>
@*    <div class="CT_Canva">
        <canvas id="myChart_CT" width="10" height="0%"></canvas>
    </div>
*@
  @*  <div class="table_Home">
        <div class="table_HSanPham">
            <h2>Sản phẩm bán chạy</h2>
            <table class="table_user responsive-table ">
                <thead>
                    <tr>                      
                        <th> Tên sản phẩm</th>
                        <th> Quy cách</th>
                        <th> Số lượng</th>
                        <th> Đơn vị</th>
                        <th> Đơn giá</th>
                        <th> Trạng Thái</th>
                    </tr>
                </thead>
                <tbody>
                   <tr>
                       <td>12312312</td>
                       <td>12312312</td>
                       <td>12312312</td>
                       <td>12312312</td>
                       <td>12312312</td>
                       <td>12312312</td>
                   </tr>
                </tbody>
            </table>
        </div>          
    </div>*@
</div>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script>
    $(document).ready(function () {
        var currentYear = new Date().getFullYear();

        // Tạo một mảng chứa 5 năm gần đây, bao gồm 2 năm trước
        var years = [];
        for (var i = currentYear - 2; i <= currentYear; i++) {
            years.push(i);
        }

        // Sử dụng mảng years để tạo danh sách các option cho dropdown
        var dropdown = $('#yearDropdown');
        $.each(years, function (index, value) {
            dropdown.append($('<option></option>').attr('value', value).text(value));
        });

        // Đặt giá trị mặc định cho dropdown là năm hiện tại

         dropdown.val(currentYear);
        // Xử lý sự kiện khi thay đổi dropdown
        $('#yearDropdown').change(function () {
            var selectedYear = $(this).val();

            $.ajax({
                url: '@Url.Action("Linechartctl", "TrangChu")' + '?time=' + Date.now(),
                method: 'GET',
                data: { year: selectedYear },
                success: function (data) {
                    drawChart(data);
                },
                error: function (error) {
                    console.log(error);
                }
            });
        });


    //    function drawChart(data) {
    //        var ctx = document.getElementById('lineChart').getContext('2d');
    //        var quantities = [];

    //        if (data === null) {
    //            // Gán giá trị 0 cho trục y
    //            for (var i = 0; i < 12; i++) {
    //                quantities.push(0);
    //            }
    //        } else {
    //            // Nếu có dữ liệu, xử lý dữ liệu như bình thường
    //            data.forEach(function (item) {
    //                quantities.push(item.TotalQuantity);
    //            });
    //        }
    //    Console.log(data+"123");
    //    Console.WriteLine(data+"345");
    //        var chart = new Chart(ctx, {
    //            type: 'line',
    //            data: {
    //                labels: ['T1', 'T2', 'T3', 'T4', 'T5', 'T6', 'T7', 'T8', 'T9', 'T10', 'T11', 'T12'],
    //                datasets: [{
    //                    label: 'Tổng Số Lượng Biên Lai',
    //                    data: quantities,
    //                    borderColor: 'rgba(75, 192, 192, 1)',
    //                    borderWidth: 1
    //                }]
    //            },
    //            options: {
    //                scales: {
    //                    y: {
    //                        beginAtZero: true
    //                    }
    //                }
    //            }
    //        });
    //    }
    //});
    </script>
    <script>
        document.addEventListener('DOMContentLoaded', function () {
            fetch('/TrangChu/Linechartctl?year=2023') // Replace ControllerName with your actual controller name
                .then(response => response.json())
                .then(data => {
                    // Process data and create the chart
                    //const labels = data.map(item => item.Month); // Assuming Month is used as labels
                    //const values = data.map(item => item.TotalQuantity); 
                     data.forEach(item => {
                     console.log(item); // In ra từng phần tử trong mảng data
                      });
                    // Assuming TotalQuantity is the value to be plotted   
                    const y = data.map(item => item.month); // Assuming Month is used as labels

                    const x = data.map(item => item.totalQuantity); // Assuming TotalQuantity is the value to be plotted
                    console.log(y);
                                        console.log(x);
                  

                    const ctx = document.getElementById('lineChart').getContext('2d');
                    const myChart = new Chart(ctx, {
                        type: 'line',
                        data: {
                            labels: y,
                            datasets: [{
                                label: 'Total Quantity',
                                data: x,
                                backgroundColor: 'rgba(0, 123, 255, 0.2)',
                                borderColor: 'rgba(0, 123, 255, 1)',
                                borderWidth: 1
                            }]
                        },
                        options: {
                            scales: {
                                y: {
                                    beginAtZero: true
                                }
                            }
                        }
                    });
                });
        });
    </script>